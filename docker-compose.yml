services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: php:8.4-fpm
    container_name: "${APP_NAME}_php"
    user: "${SERVER_USER}"
    restart: always
    # tty: true
    # ports:
    #   - "9000:9000"
    working_dir: /var/www
    environment:
        APP_ENV: "${APP_ENV}"
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - database
      - redis_cache

  web_server:
    image: nginx:1.27.3-alpine
    container_name: "${APP_NAME}_nginx"
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    image: node:23.4
    container_name: "${APP_NAME}_node"
    # ports:
    # - "3000:3000"
    restart: always
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules

  database:
    image: postgres:17
    container_name: "${APP_NAME}_postgres"
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  redis_cache:
    image: redis:7.4.1
    container_name: "${APP_NAME}_redis"
    restart: always
    ports:
      - "6379:6379"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
